// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ezSCORES.Services.Database;

#nullable disable

namespace ezSCORES.Services.Migrations
{
    [DbContext(typeof(EzScoresdbRsiiContext))]
    [Migration("20250212182737_AddedMisingCreatedAtAndModifiedAtProps")]
    partial class AddedMisingCreatedAtAndModifiedAtProps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ezSCORES.Services.Database.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaId")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<float?>("PaIdAmount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Applicat__3214EC0724EF6103");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("TeamId");

                    b.HasIndex(new[] { "Id" }, "Application_Id");

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__City__3214EC071DEF76E6");

                    b.HasIndex(new[] { "Id" }, "City_Id");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Fee")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPlayersPerTeam")
                        .HasColumnType("int");

                    b.Property<int>("MaxTeamCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("SelectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC07AB2663C6");

                    b.HasIndex("CityId");

                    b.HasIndex("SelectionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "Competition_Id");

                    b.ToTable("Competition", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsReferee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefereeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC07E77F3110");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("RefereeId");

                    b.HasIndex(new[] { "Id" }, "CompetitionsReferees_Id");

                    b.ToTable("CompetitionsReferees");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsRefereesMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionsRefereesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC07BDBF23B5");

                    b.HasIndex("CompetitionsRefereesId");

                    b.HasIndex("MatchId");

                    b.ToTable("CompetitionsRefereesMatch", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsSponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC0729DE339E");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("SponsorId");

                    b.HasIndex(new[] { "Id" }, "CompetitionsSponsors_Id");

                    b.ToTable("CompetitionsSponsors");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEliminated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC0785B5A9B9");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeamId");

                    b.HasIndex(new[] { "Id" }, "CompetitionsTeams_Id");

                    b.ToTable("CompetitionsTeams");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeamsPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionsTeamsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoalsTotal")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Competit__3214EC07D9313C4C");

                    b.HasIndex("CompetitionsTeamsId");

                    b.HasIndex("PlayerId");

                    b.HasIndex(new[] { "Id" }, "CompetitionsTeamsPlayers_Id");

                    b.ToTable("CompetitionsTeamsPlayers");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.FavoriteCompetition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Favorite__3214EC070C68C883");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "FavoriteCompetitions_Id");

                    b.ToTable("FavoriteCompetitions");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameStage")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentlyActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MatchLength")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Fixture__3214EC07DDA6DF62");

                    b.HasIndex("CompetitionId");

                    b.HasIndex(new[] { "Id" }, "Fixture_Id");

                    b.ToTable("Fixture", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompetitionTeamPlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHomeGoal")
                        .HasColumnType("bit");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScoredAtMinute")
                        .HasColumnType("int");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Goal__3214EC077EAB4DD5");

                    b.HasIndex("CompetitionTeamPlayerId");

                    b.HasIndex("MatchId");

                    b.HasIndex(new[] { "Id" }, "Goal_Id");

                    b.ToTable("Goal", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Group__3214EC077C17C5A0");

                    b.HasIndex("CompetitionId");

                    b.HasIndex(new[] { "Id" }, "Group_Id");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FixtureId")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompletedInRegullarTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentlyActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderway")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StadiumId")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Match__3214EC071F8B3D0F");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("FixtureId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("StadiumId");

                    b.HasIndex("WinnerId");

                    b.HasIndex(new[] { "Id" }, "Match_Id");

                    b.ToTable("Match", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Player__3214EC07005A96A9");

                    b.HasIndex(new[] { "Id" }, "Player_Id");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Referee__3214EC07FBECF17D");

                    b.HasIndex(new[] { "Id" }, "Referee_Id");

                    b.ToTable("Referee", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Review__3214EC07E1FC36A9");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "Review_Id");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RankingPosition")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Reward__3214EC07BCCEE2C9");

                    b.HasIndex("CompetitionId");

                    b.HasIndex(new[] { "Id" }, "Reward_Id");

                    b.ToTable("Reward", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07CD5B98F8");

                    b.HasIndex(new[] { "Id" }, "Role_Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Selection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgeMax")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Selectio__3214EC07556A3345");

                    b.HasIndex(new[] { "Id" }, "Selection_Id");

                    b.ToTable("Selection", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Sponsors__3214EC0758CE2867");

                    b.HasIndex(new[] { "Id" }, "Sponsors_Id");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Stadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Stadium__3214EC07FBE7F165");

                    b.HasIndex(new[] { "Id" }, "Stadium_Id");

                    b.ToTable("Stadium", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SelectionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Team__3214EC0789ED9810");

                    b.HasIndex("SelectionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Id" }, "Team_Id");

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Organization")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC079B2B3FAA");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Id" }, "User_Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Application", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("Applications")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKApplicatio868810");

                    b.HasOne("ezSCORES.Services.Database.Team", "Team")
                        .WithMany("Applications")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("FKApplicatio882038");

                    b.Navigation("Competition");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Competition", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.City", "City")
                        .WithMany("Competitions")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio697082");

                    b.HasOne("ezSCORES.Services.Database.Selection", "Selection")
                        .WithMany("Competitions")
                        .HasForeignKey("SelectionId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio79001");

                    b.HasOne("ezSCORES.Services.Database.User", "User")
                        .WithMany("Competitions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio44846");

                    b.Navigation("City");

                    b.Navigation("Selection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsReferee", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("CompetitionsReferees")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio239972");

                    b.HasOne("ezSCORES.Services.Database.Referee", "Referee")
                        .WithMany("CompetitionsReferees")
                        .HasForeignKey("RefereeId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio314320");

                    b.Navigation("Competition");

                    b.Navigation("Referee");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsRefereesMatch", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.CompetitionsReferee", "CompetitionsReferees")
                        .WithMany("CompetitionsRefereesMatches")
                        .HasForeignKey("CompetitionsRefereesId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio933480");

                    b.HasOne("ezSCORES.Services.Database.Match", "Match")
                        .WithMany("CompetitionsRefereesMatches")
                        .HasForeignKey("MatchId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio997653");

                    b.Navigation("CompetitionsReferees");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsSponsor", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("CompetitionsSponsors")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio193295");

                    b.HasOne("ezSCORES.Services.Database.Sponsor", "Sponsor")
                        .WithMany("CompetitionsSponsors")
                        .HasForeignKey("SponsorId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio368850");

                    b.Navigation("Competition");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeam", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("CompetitionsTeams")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio723071");

                    b.HasOne("ezSCORES.Services.Database.Group", "Group")
                        .WithMany("CompetitionsTeams")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FKCompetitio461609");

                    b.HasOne("ezSCORES.Services.Database.Team", "Team")
                        .WithMany("CompetitionsTeams")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio27778");

                    b.Navigation("Competition");

                    b.Navigation("Group");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeamsPlayer", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.CompetitionsTeam", "CompetitionsTeams")
                        .WithMany("CompetitionsTeamsPlayers")
                        .HasForeignKey("CompetitionsTeamsId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio399896");

                    b.HasOne("ezSCORES.Services.Database.Player", "Player")
                        .WithMany("CompetitionsTeamsPlayers")
                        .HasForeignKey("PlayerId")
                        .IsRequired()
                        .HasConstraintName("FKCompetitio720212");

                    b.Navigation("CompetitionsTeams");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.FavoriteCompetition", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("FavoriteCompetitions")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKFavoriteCo848933");

                    b.HasOne("ezSCORES.Services.Database.User", "User")
                        .WithMany("FavoriteCompetitions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKFavoriteCo627745");

                    b.Navigation("Competition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Fixture", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("Fixtures")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKFixture182036");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Goal", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.CompetitionsTeamsPlayer", "CompetitionTeamPlayer")
                        .WithMany("Goals")
                        .HasForeignKey("CompetitionTeamPlayerId")
                        .HasConstraintName("FKGoal189887");

                    b.HasOne("ezSCORES.Services.Database.Match", "Match")
                        .WithMany("Goals")
                        .HasForeignKey("MatchId")
                        .IsRequired()
                        .HasConstraintName("FKGoal111806");

                    b.Navigation("CompetitionTeamPlayer");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Group", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("Groups")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKGroup54426");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Match", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.CompetitionsTeam", "AwayTeam")
                        .WithMany("MatchAwayTeams")
                        .HasForeignKey("AwayTeamId")
                        .IsRequired()
                        .HasConstraintName("FKMatch980815");

                    b.HasOne("ezSCORES.Services.Database.Fixture", "Fixture")
                        .WithMany("Matches")
                        .HasForeignKey("FixtureId")
                        .IsRequired()
                        .HasConstraintName("FKMatch159901");

                    b.HasOne("ezSCORES.Services.Database.CompetitionsTeam", "HomeTeam")
                        .WithMany("MatchHomeTeams")
                        .HasForeignKey("HomeTeamId")
                        .IsRequired()
                        .HasConstraintName("FKMatch812227");

                    b.HasOne("ezSCORES.Services.Database.Stadium", "Stadium")
                        .WithMany("Matches")
                        .HasForeignKey("StadiumId")
                        .IsRequired()
                        .HasConstraintName("FKMatch149665");

                    b.HasOne("ezSCORES.Services.Database.CompetitionsTeam", "Winner")
                        .WithMany("MatchWinners")
                        .HasForeignKey("WinnerId")
                        .HasConstraintName("FKMatch584835");

                    b.Navigation("AwayTeam");

                    b.Navigation("Fixture");

                    b.Navigation("HomeTeam");

                    b.Navigation("Stadium");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Review", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("Reviews")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKReview505868");

                    b.HasOne("ezSCORES.Services.Database.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKReview970810");

                    b.Navigation("Competition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Reward", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Competition", "Competition")
                        .WithMany("Rewards")
                        .HasForeignKey("CompetitionId")
                        .IsRequired()
                        .HasConstraintName("FKReward483381");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Team", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Selection", "Selection")
                        .WithMany("Teams")
                        .HasForeignKey("SelectionId")
                        .IsRequired()
                        .HasConstraintName("FKTeam948660");

                    b.HasOne("ezSCORES.Services.Database.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKTeam914505");

                    b.Navigation("Selection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.User", b =>
                {
                    b.HasOne("ezSCORES.Services.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FKUser349727");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.City", b =>
                {
                    b.Navigation("Competitions");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Competition", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CompetitionsReferees");

                    b.Navigation("CompetitionsSponsors");

                    b.Navigation("CompetitionsTeams");

                    b.Navigation("FavoriteCompetitions");

                    b.Navigation("Fixtures");

                    b.Navigation("Groups");

                    b.Navigation("Reviews");

                    b.Navigation("Rewards");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsReferee", b =>
                {
                    b.Navigation("CompetitionsRefereesMatches");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeam", b =>
                {
                    b.Navigation("CompetitionsTeamsPlayers");

                    b.Navigation("MatchAwayTeams");

                    b.Navigation("MatchHomeTeams");

                    b.Navigation("MatchWinners");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.CompetitionsTeamsPlayer", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Fixture", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Group", b =>
                {
                    b.Navigation("CompetitionsTeams");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Match", b =>
                {
                    b.Navigation("CompetitionsRefereesMatches");

                    b.Navigation("Goals");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Player", b =>
                {
                    b.Navigation("CompetitionsTeamsPlayers");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Referee", b =>
                {
                    b.Navigation("CompetitionsReferees");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Selection", b =>
                {
                    b.Navigation("Competitions");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Sponsor", b =>
                {
                    b.Navigation("CompetitionsSponsors");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Stadium", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.Team", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CompetitionsTeams");
                });

            modelBuilder.Entity("ezSCORES.Services.Database.User", b =>
                {
                    b.Navigation("Competitions");

                    b.Navigation("FavoriteCompetitions");

                    b.Navigation("Reviews");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
